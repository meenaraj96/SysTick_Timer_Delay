
SysTick_Timer1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001dc  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000374  08000374  00020018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000374  08000374  00020018  2**0
                  CONTENTS
  4 .ARM          00000000  08000374  08000374  00020018  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000374  08000374  00020018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000374  08000374  00010374  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000378  08000378  00010378  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000018  20000000  0800037c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000018  08000394  00020018  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000034  08000394  00020034  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020018  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000017d  00000000  00000000  00020048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000cb  00000000  00000000  000201c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00020290  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  000202e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f58  00000000  00000000  00020318  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000464  00000000  00000000  00021270  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003bf5  00000000  00000000  000216d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000252c9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  0002531c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000018 	.word	0x20000018
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800035c 	.word	0x0800035c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	2000001c 	.word	0x2000001c
 80001d4:	0800035c 	.word	0x0800035c

080001d8 <systickdelayms>:
uint32_t *pAHB1ENR = (uint32_t*)0x40023830;
uint32_t *pGPIOAMODER = (uint32_t*)0x40020000;
uint32_t *pGPIOAODR = (uint32_t*)0x40020014;

void systickdelayms(int delay)
{
 80001d8:	b480      	push	{r7}
 80001da:	b085      	sub	sp, #20
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
	*pSTRVR |= SYSTICK_LOAD_VALUE; //Reload Value Register
 80001e0:	4b1d      	ldr	r3, [pc, #116]	; (8000258 <systickdelayms+0x80>)
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	681a      	ldr	r2, [r3, #0]
 80001e6:	4b1c      	ldr	r3, [pc, #112]	; (8000258 <systickdelayms+0x80>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	f442 527a 	orr.w	r2, r2, #16000	; 0x3e80
 80001ee:	601a      	str	r2, [r3, #0]

	*pSTCVR |= 0; //Current Value Register
 80001f0:	4b1a      	ldr	r3, [pc, #104]	; (800025c <systickdelayms+0x84>)
 80001f2:	681a      	ldr	r2, [r3, #0]
 80001f4:	4b19      	ldr	r3, [pc, #100]	; (800025c <systickdelayms+0x84>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	6812      	ldr	r2, [r2, #0]
 80001fa:	601a      	str	r2, [r3, #0]

	//Control & Status Register
	*pSTCSR |= CTRL_ENABLE; //enable the systick counter
 80001fc:	4b18      	ldr	r3, [pc, #96]	; (8000260 <systickdelayms+0x88>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	681a      	ldr	r2, [r3, #0]
 8000202:	4b17      	ldr	r3, [pc, #92]	; (8000260 <systickdelayms+0x88>)
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	f042 0201 	orr.w	r2, r2, #1
 800020a:	601a      	str	r2, [r3, #0]
	*pSTCSR |= CTRL_CLKSRC; //select processor clock
 800020c:	4b14      	ldr	r3, [pc, #80]	; (8000260 <systickdelayms+0x88>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	681a      	ldr	r2, [r3, #0]
 8000212:	4b13      	ldr	r3, [pc, #76]	; (8000260 <systickdelayms+0x88>)
 8000214:	681b      	ldr	r3, [r3, #0]
 8000216:	f042 0204 	orr.w	r2, r2, #4
 800021a:	601a      	str	r2, [r3, #0]

	for (int i=0;i<delay;i++)
 800021c:	2300      	movs	r3, #0
 800021e:	60fb      	str	r3, [r7, #12]
 8000220:	e00a      	b.n	8000238 <systickdelayms+0x60>
	{
		while((*pSTCSR & CTRL_COUNTFLAG)==0){} //COUNTFLAG Returns 1 if timer counted to 0
 8000222:	bf00      	nop
 8000224:	4b0e      	ldr	r3, [pc, #56]	; (8000260 <systickdelayms+0x88>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800022e:	2b00      	cmp	r3, #0
 8000230:	d0f8      	beq.n	8000224 <systickdelayms+0x4c>
	for (int i=0;i<delay;i++)
 8000232:	68fb      	ldr	r3, [r7, #12]
 8000234:	3301      	adds	r3, #1
 8000236:	60fb      	str	r3, [r7, #12]
 8000238:	68fa      	ldr	r2, [r7, #12]
 800023a:	687b      	ldr	r3, [r7, #4]
 800023c:	429a      	cmp	r2, r3
 800023e:	dbf0      	blt.n	8000222 <systickdelayms+0x4a>
	}

	*pSTCSR |= 0; //Control & Status Register
 8000240:	4b07      	ldr	r3, [pc, #28]	; (8000260 <systickdelayms+0x88>)
 8000242:	681a      	ldr	r2, [r3, #0]
 8000244:	4b06      	ldr	r3, [pc, #24]	; (8000260 <systickdelayms+0x88>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	6812      	ldr	r2, [r2, #0]
 800024a:	601a      	str	r2, [r3, #0]
}
 800024c:	bf00      	nop
 800024e:	3714      	adds	r7, #20
 8000250:	46bd      	mov	sp, r7
 8000252:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000256:	4770      	bx	lr
 8000258:	20000004 	.word	0x20000004
 800025c:	20000008 	.word	0x20000008
 8000260:	20000000 	.word	0x20000000

08000264 <main>:


int main(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	*pAHB1ENR |= GPIOAEN; //Enable GPIOA
 8000268:	4b12      	ldr	r3, [pc, #72]	; (80002b4 <main+0x50>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	681a      	ldr	r2, [r3, #0]
 800026e:	4b11      	ldr	r3, [pc, #68]	; (80002b4 <main+0x50>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f042 0201 	orr.w	r2, r2, #1
 8000276:	601a      	str	r2, [r3, #0]
	//clear and set MODER - 01: General purpose output mode
	*pGPIOAMODER &= ~(1U<<11);
 8000278:	4b0f      	ldr	r3, [pc, #60]	; (80002b8 <main+0x54>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	681a      	ldr	r2, [r3, #0]
 800027e:	4b0e      	ldr	r3, [pc, #56]	; (80002b8 <main+0x54>)
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8000286:	601a      	str	r2, [r3, #0]
	*pGPIOAMODER |=  (1U<<10);
 8000288:	4b0b      	ldr	r3, [pc, #44]	; (80002b8 <main+0x54>)
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	4b0a      	ldr	r3, [pc, #40]	; (80002b8 <main+0x54>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000296:	601a      	str	r2, [r3, #0]

	while(1)
	{
		*pGPIOAODR ^= LED;
 8000298:	4b08      	ldr	r3, [pc, #32]	; (80002bc <main+0x58>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	4b07      	ldr	r3, [pc, #28]	; (80002bc <main+0x58>)
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	f082 0220 	eor.w	r2, r2, #32
 80002a6:	601a      	str	r2, [r3, #0]
		systickdelayms(500);
 80002a8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80002ac:	f7ff ff94 	bl	80001d8 <systickdelayms>
		*pGPIOAODR ^= LED;
 80002b0:	e7f2      	b.n	8000298 <main+0x34>
 80002b2:	bf00      	nop
 80002b4:	2000000c 	.word	0x2000000c
 80002b8:	20000010 	.word	0x20000010
 80002bc:	20000014 	.word	0x20000014

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	; (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	; (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	; (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	; (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	; (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	; (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f000 f811 	bl	8000314 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ffb7 	bl	8000264 <main>

080002f6 <LoopForever>:

LoopForever:
  b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000018 	.word	0x20000018
  ldr r2, =_sidata
 8000304:	0800037c 	.word	0x0800037c
  ldr r2, =_sbss
 8000308:	20000018 	.word	0x20000018
  ldr r4, =_ebss
 800030c:	20000034 	.word	0x20000034

08000310 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC_IRQHandler>
	...

08000314 <__libc_init_array>:
 8000314:	b570      	push	{r4, r5, r6, lr}
 8000316:	4d0d      	ldr	r5, [pc, #52]	; (800034c <__libc_init_array+0x38>)
 8000318:	4c0d      	ldr	r4, [pc, #52]	; (8000350 <__libc_init_array+0x3c>)
 800031a:	1b64      	subs	r4, r4, r5
 800031c:	10a4      	asrs	r4, r4, #2
 800031e:	2600      	movs	r6, #0
 8000320:	42a6      	cmp	r6, r4
 8000322:	d109      	bne.n	8000338 <__libc_init_array+0x24>
 8000324:	4d0b      	ldr	r5, [pc, #44]	; (8000354 <__libc_init_array+0x40>)
 8000326:	4c0c      	ldr	r4, [pc, #48]	; (8000358 <__libc_init_array+0x44>)
 8000328:	f000 f818 	bl	800035c <_init>
 800032c:	1b64      	subs	r4, r4, r5
 800032e:	10a4      	asrs	r4, r4, #2
 8000330:	2600      	movs	r6, #0
 8000332:	42a6      	cmp	r6, r4
 8000334:	d105      	bne.n	8000342 <__libc_init_array+0x2e>
 8000336:	bd70      	pop	{r4, r5, r6, pc}
 8000338:	f855 3b04 	ldr.w	r3, [r5], #4
 800033c:	4798      	blx	r3
 800033e:	3601      	adds	r6, #1
 8000340:	e7ee      	b.n	8000320 <__libc_init_array+0xc>
 8000342:	f855 3b04 	ldr.w	r3, [r5], #4
 8000346:	4798      	blx	r3
 8000348:	3601      	adds	r6, #1
 800034a:	e7f2      	b.n	8000332 <__libc_init_array+0x1e>
 800034c:	08000374 	.word	0x08000374
 8000350:	08000374 	.word	0x08000374
 8000354:	08000374 	.word	0x08000374
 8000358:	08000378 	.word	0x08000378

0800035c <_init>:
 800035c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800035e:	bf00      	nop
 8000360:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000362:	bc08      	pop	{r3}
 8000364:	469e      	mov	lr, r3
 8000366:	4770      	bx	lr

08000368 <_fini>:
 8000368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036a:	bf00      	nop
 800036c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800036e:	bc08      	pop	{r3}
 8000370:	469e      	mov	lr, r3
 8000372:	4770      	bx	lr
